name: Pipeline

on: [push, pull_request]

jobs:
  black:
    name: Formatting check using Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable

  mypy:
    name: Typing check using Mypy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - id: cache-pipenv
        name: Cache Pipenv
        uses: actions/cache@v1
        with:
          path: /github/home/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependecies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: install -d
      - name: Run mypy
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: run mypy .

  test:
    name: PyTest tests
    needs: [black, mypy]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - id: cache-pipenv
        name: Cache Pipenv
        uses: actions/cache@v1
        with:
          path: /github/home/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependecies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: install -d
      - name: Run pytest
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: run python -m pytest tests/
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: ${{ always() }}
        with:
          report_paths: "junit.xml"
